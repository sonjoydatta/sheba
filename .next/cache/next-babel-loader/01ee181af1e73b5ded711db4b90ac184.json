{"ast":null,"code":"var _jsxFileName = \"/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppContext from './AppContext';\n\nfunction AppProvider(props) {\n  console.log(props.isMobile);\n  return __jsx(AppContext.Provider, {\n    value: {\n      isMobile: props.isMobile\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nAppProvider.getInitialProps = ({\n  req\n}) => {\n  let userAgent;\n\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i));\n  return {\n    isMobile\n  };\n};\n\nexport default AppProvider;","map":{"version":3,"sources":["/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx"],"names":["AppContext","AppProvider","props","console","log","isMobile","children","getInitialProps","req","userAgent","headers","navigator","Boolean","match"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AAEA,SACE,MAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,QAAQ,EAAEH,KAAK,CAACG;AADX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,KAAK,CAACI,QALT,CADF;AASD;;AAEDL,WAAW,CAACM,eAAZ,GAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzC,MAAIC,SAAJ;;AACA,MAAID,GAAJ,EAAS;AACPC,IAAAA,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,SAAS,GAAGE,SAAS,CAACF,SAAtB;AACD;;AAED,MAAIJ,QAAQ,GAAGO,OAAO,CAACH,SAAS,CAACI,KAAV,CACrB,oEADqB,CAAD,CAAtB;AAIA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACD,CAbD;;AAeA,eAAeJ,WAAf","sourcesContent":["import AppContext from './AppContext';\n\nfunction AppProvider( props ) {\n  console.log(props.isMobile);\n  \n  return (\n    <AppContext.Provider\n      value={{\n        isMobile: props.isMobile\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n\nAppProvider.getInitialProps = ({ req }) => {\n  let userAgent;\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(\n    /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n  ))\n\n  return { isMobile }\n}\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}