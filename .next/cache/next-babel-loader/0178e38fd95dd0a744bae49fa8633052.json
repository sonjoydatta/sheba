{"ast":null,"code":"var _jsxFileName = \"/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport AppContext from './AppContext';\n\nclass AppProvider extends Component {\n  static async getInitialProps({\n    req\n  }) {\n    let userAgent;\n\n    if (req) {\n      userAgent = req.headers['user-agent'];\n    } else {\n      userAgent = navigator.userAgent;\n    }\n\n    let isMobile = Boolean(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i));\n    return {\n      isMobile\n    };\n  }\n\n  render() {\n    console.log(this.props.isMobile);\n    return __jsx(AppContext.Provider, {\n      value: {\n        isMobile: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nAppProvider.getInitialProps = ({\n  req\n}) => {\n  let userAgent;\n\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i));\n  return {\n    isMobile\n  };\n};\n\nexport default AppProvider;","map":{"version":3,"sources":["/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx"],"names":["React","Component","AppContext","AppProvider","getInitialProps","req","userAgent","headers","navigator","isMobile","Boolean","match","render","console","log","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAElC,eAAaG,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAsC;AACpC,QAAIC,SAAJ;;AACA,QAAID,GAAJ,EAAS;AACPC,MAAAA,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,SAAS,GAAGE,SAAS,CAACF,SAAtB;AACD;;AAED,QAAIG,QAAQ,GAAGC,OAAO,CAACJ,SAAS,CAACK,KAAV,CACrB,oEADqB,CAAD,CAAtB;AAIA,WAAO;AAAEF,MAAAA;AAAF,KAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,QAAvB;AACA,WACE,MAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,QAAQ,EAAE;AADL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKM,KAAL,CAAWC,QALd,CADF;AASD;;AA5BiC;;AA+BpCb,WAAW,CAACC,eAAZ,GAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzC,MAAIC,SAAJ;;AACA,MAAID,GAAJ,EAAS;AACPC,IAAAA,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,SAAS,GAAGE,SAAS,CAACF,SAAtB;AACD;;AAED,MAAIG,QAAQ,GAAGC,OAAO,CAACJ,SAAS,CAACK,KAAV,CACrB,oEADqB,CAAD,CAAtB;AAIA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CAbD;;AAeA,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport AppContext from './AppContext';\n\nclass AppProvider extends Component {\n\n  static async getInitialProps({ req }) {\n    let userAgent;\n    if (req) {\n      userAgent = req.headers['user-agent'];\n    } else {\n      userAgent = navigator.userAgent;\n    }\n  \n    let isMobile = Boolean(userAgent.match(\n      /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n    ));\n\n    return { isMobile }\n  }\n\n  render() {\n    console.log(this.props.isMobile);\n    return (\n      <AppContext.Provider\n        value={{\n          isMobile: ''\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nAppProvider.getInitialProps = ({ req }) => {\n  let userAgent;\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(\n    /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n  ))\n\n  return { isMobile }\n}\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}