{"ast":null,"code":"var _jsxFileName = \"/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport AppContext from './AppContext';\n\nclass AppProvider extends Component {\n  render() {\n    return __jsx(AppContext.Provider, {\n      value: {\n        isMobile: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nAppProvider.getInitialProps = ({\n  req\n}) => {\n  let userAgent;\n\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i));\n  return {\n    isMobile\n  };\n};\n\nexport default AppProvider;","map":{"version":3,"sources":["/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx"],"names":["React","Component","AppContext","AppProvider","render","isMobile","props","children","getInitialProps","req","userAgent","headers","navigator","Boolean","match"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,UAAD,CAAY,QAAZ;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AADL,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKC,KAAL,CAAWC,QALd,CADF;AASD;;AAXiC;;AAcpCJ,WAAW,CAACK,eAAZ,GAA8B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACzC,MAAIC,SAAJ;;AACA,MAAID,GAAJ,EAAS;AACPC,IAAAA,SAAS,GAAGD,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAZ;AACD,GAFD,MAEO;AACLD,IAAAA,SAAS,GAAGE,SAAS,CAACF,SAAtB;AACD;;AAED,MAAIL,QAAQ,GAAGQ,OAAO,CAACH,SAAS,CAACI,KAAV,CACrB,oEADqB,CAAD,CAAtB;AAIA,SAAO;AAAET,IAAAA;AAAF,GAAP;AACD,CAbD;;AAeA,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport AppContext from './AppContext';\n\nclass AppProvider extends Component {\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          isMobile: ''\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nAppProvider.getInitialProps = ({ req }) => {\n  let userAgent;\n  if (req) {\n    userAgent = req.headers['user-agent'];\n  } else {\n    userAgent = navigator.userAgent;\n  }\n\n  let isMobile = Boolean(userAgent.match(\n    /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n  ))\n\n  return { isMobile }\n}\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}