{"ast":null,"code":"var _jsxFileName = \"/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppContext from './AppContext';\n\nfunction AppProvider(props) {\n  return __jsx(AppContext.Provider, {\n    value: {\n      isMobile: 'text'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, props.children);\n} // AppProvider.getInitialProps = ({ req }) => {\n//   let userAgent;\n//   if (req) { // if you are on the server and you get a 'req' property from your context\n//     userAgent = req.headers['user-agent'] // get the user-agent from the headers\n//   } else {\n//     userAgent = navigator.userAgent // if you are on the client you can access the navigator from the window object\n//   }\n//   let isMobile = Boolean(userAgent.match(\n//     /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n//   ))\n//   return { isMobile }\n// }\n\n\nexport default AppProvider;","map":{"version":3,"sources":["/Users/sonjoydatta/Desktop/sheba/components/AppProvider.jsx"],"names":["AppContext","AppProvider","props","isMobile","children"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC5B,SACE,MAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,KAAK,CAACE,QALT,CADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA,eAAeH,WAAf","sourcesContent":["import AppContext from './AppContext';\n\nfunction AppProvider( props ) {\n  return (\n    <AppContext.Provider\n      value={{\n        isMobile: 'text'\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n}\n\n// AppProvider.getInitialProps = ({ req }) => {\n//   let userAgent;\n//   if (req) { // if you are on the server and you get a 'req' property from your context\n//     userAgent = req.headers['user-agent'] // get the user-agent from the headers\n//   } else {\n//     userAgent = navigator.userAgent // if you are on the client you can access the navigator from the window object\n//   }\n\n//   let isMobile = Boolean(userAgent.match(\n//     /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n//   ))\n\n//   return { isMobile }\n// }\n\nexport default AppProvider;"]},"metadata":{},"sourceType":"module"}